<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@2.33">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@1.3.8"/>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@1.3.8">
      <jobProperties/>
      <triggers/>
      <parameters>
        <string>Version</string>
      </parameters>
      <options/>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>Version</name>
          <description>Front-End App Version</description>
          <defaultValue>5.0.0</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2.73">
    <script>pipeline{
    agent {
        label &apos;jenkins-slave&apos;
    }
    parameters {
        string(name: &apos;Version&apos;, defaultValue: &apos;5.0.0&apos;, description: &apos;Front-End App Version&apos;)
    }
    stages{
        stage(&apos;Checkout code&apos;){
            steps{
                git &apos;https://github.com/dynatrace-sockshop/front-end.git&apos;
            }
        }
        stage(&apos;Build Code&apos;) {
            steps{
                container(&apos;nodejs&apos;){
                    echo &apos;Code Building...&apos;
                    script {
                        sh &apos;npm install&apos;
                    }
                    //sleep 20
                }
            }
        }
        stage(&apos;Build Image&apos;){
            steps{
                container(&apos;docker&apos;){
                    echo &apos;Image Building...&apos;
                    script{
                        sh &quot;docker build -t hdacr.azurecr.io/frontend-${params.Version} .&quot;
                    }
                    //sleep 20
                }
            }
        }
        stage(&apos;Push Image to Repo&apos;){
            steps{
                container(&apos;docker&apos;){
                    echo &apos;Pushing Image...&apos;
                    withDockerRegistry([ credentialsId: "AzureSP", url: "https://hdacr.azurecr.io" ]) {
                        sh "docker push hdacr.azurecr.io/frontend-${params.Version}"
                    }
                    //sleep 20
                }
            }
        }
    }
}</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>
